"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[795],{54795:function(e,r,t){t.d(r,{zB:function(){return signIn},w7:function(){return signOut}}),t(95802);var n=t(82038);let errors_AuthError=class errors_AuthError extends Error{constructor(e,r){e instanceof Error?super(void 0,{cause:{err:e,...e.cause,...r}}):"string"==typeof e?(r instanceof Error&&(r={err:r,...r.cause}),super(e,r)):super(void 0,e),Error.captureStackTrace?.(this,this.constructor),this.name=e instanceof errors_AuthError?e.name:this.constructor.name}};let ClientFetchError=class ClientFetchError extends errors_AuthError{};async function client_fetchData(e,r,t,n={}){let a=`${apiBaseUrl(r)}/${e}`;try{let e={headers:{"Content-Type":"application/json",...n?.headers?.cookie?{cookie:n.headers.cookie}:{}}};n?.body&&(e.body=JSON.stringify(n.body),e.method="POST");let r=await fetch(a,e),t=await r.json();if(!r.ok)throw t;return t}catch(e){return t.error(new ClientFetchError(e.message,e)),null}}function apiBaseUrl(e){return"undefined"==typeof window?`${e.baseUrlServer}${e.basePathServer}`:e.basePath}function parseUrl(e){let r=new URL("http://localhost:3000/api/auth");e&&!e.startsWith("http")&&(e=`https://${e}`);let t=new URL(e??r),n=("/"===t.pathname?r.pathname:t.pathname).replace(/\/$/,""),a=`${t.origin}${n}`;return{origin:t.origin,host:t.host,path:n,base:a,toString:()=>a}}var a=t(55406);let o={baseUrl:parseUrl(a.env.NEXTAUTH_URL??a.env.VERCEL_URL).origin,basePath:parseUrl(a.env.NEXTAUTH_URL).path,baseUrlServer:parseUrl(a.env.NEXTAUTH_URL_INTERNAL??a.env.NEXTAUTH_URL??a.env.VERCEL_URL).origin,basePathServer:parseUrl(a.env.NEXTAUTH_URL_INTERNAL??a.env.NEXTAUTH_URL).path,_lastSync:0,_session:void 0,_getSession:()=>{}};function broadcast(){return"undefined"!=typeof BroadcastChannel?new BroadcastChannel("next-auth"):{postMessage:()=>{},addEventListener:()=>{},removeEventListener:()=>{}}}let s={debug:console.debug,error:console.error,warn:console.warn};async function getCsrfToken(){let e=await client_fetchData("csrf",o,s);return e?.csrfToken}async function getProviders(){return client_fetchData("providers",o,s)}async function signIn(e,r,t){let{callbackUrl:n=window.location.href,redirect:a=!0}=r??{},s=apiBaseUrl(o),i=await getProviders();if(!i){window.location.href=`${s}/error`;return}if(!e||!(e in i)){window.location.href=`${s}/signin?${new URLSearchParams({callbackUrl:n})}`;return}let c="credentials"===i[e].type,l="email"===i[e].type,u=`${s}/${c?"callback":"signin"}/${e}`,h=`${u}?${new URLSearchParams(t)}`,d=await fetch(h,{method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded","X-Auth-Return-Redirect":"1"},body:new URLSearchParams({...r,csrfToken:await getCsrfToken(),callbackUrl:n})}),w=await d.json();if(a||!(c||l)){let e=w.url??n;window.location.href=e,e.includes("#")&&window.location.reload();return}let f=new URL(w.url).searchParams.get("error");return d.ok&&await o._getSession({event:"storage"}),{error:f,status:d.status,ok:d.ok,url:f?null:w.url}}async function signOut(e){let{callbackUrl:r=window.location.href}=e??{},t=apiBaseUrl(o),n={method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded","X-Auth-Return-Redirect":"1"},body:new URLSearchParams({csrfToken:await getCsrfToken(),callbackUrl:r})},a=await fetch(`${t}/signout`,n),s=await a.json();if(broadcast().postMessage({event:"session",data:{trigger:"signout"}}),e?.redirect??!0){let e=s.url??r;window.location.href=e,e.includes("#")&&window.location.reload();return}return await o._getSession({event:"storage"}),s}n.createContext?.(void 0)}}]);